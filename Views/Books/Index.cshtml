
@model TestLibrary.Canstanta.PaginatedList<TestLibrary.Models.Book>


@{
    ViewData["Title"] = "Index";
}
<br />
<br />
<br />
<br />
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<div class=" row">
    <div class="col-6">
        <h2 class="text-info">Books</h2>
    </div>
    <div class="col-6 text-right">
        <a class="btn btn-info" asp-action="Create"><i class="fas fa-book"></i> &nbsp; Add New Book</a>
    </div>
    <br />
    <div class="col-12">
        <table class=" table table-striped border">
            <tr class=" table-info">
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Title</a>

             </th>
                
                <th>
                   
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Author</a>

                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Language</a>

                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Category</a>

                </th>

            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Language)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td class="text-right" rold="group">
                        <div class="btn-group">
                            <form action="Edit">
                                <button type="submit" class="btn btn-primary  rounded-0" asp-action="Edit" asp-route-id="@item.id"><i class="far fa-edit"></i> </button>
                            </form>
                            <form method="post" action="Delete">
                                <button onclick="if (!confirm('Are you sure you want to delete this Item?')){ return false }" type="submit" class="btn btn-danger  rounded-0" asp-action="Delete" asp-route-id="@item.id"><i class="far fa-trash-alt"></i> </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
